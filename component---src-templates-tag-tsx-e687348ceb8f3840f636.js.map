{"version":3,"sources":["webpack:///./src/templates/tag.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/LinkWithLang.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/SearchInput.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/i18n/index.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Img.tsx","webpack:///./src/utils/getTagText.ts","webpack:///./src/components/PostCard.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","_class101_ui__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_LinkWithLang__WEBPACK_IMPORTED_MODULE_4__","_components_PostCard__WEBPACK_IMPORTED_MODULE_5__","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","_utils_getTagText__WEBPACK_IMPORTED_MODULE_7__","TagTemplate","props","pageContext","data","tag","slug","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagText","getTagText","a","createElement","title","pathname","SiteTitle","SiteContent","ViewAllTagLink","to","map","_ref","node","key","fields","md","lg","styled","Headline1","withConfig","displayName","componentId","Body2","Colors","gray700","LinkWithLang","gray800","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","i18n","useTranslation","children","className","path","startsWith","language","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","siteMetadata","_public_static_d_191206003_json__WEBPACK_IMPORTED_MODULE_0__","site","_useTranslation","t","description","thumbnail","author","absolutedThumbnail","siteUrl","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","titleTemplate","link","rel","type","sizes","href","meta","name","content","property","keywords","join","facebookAppId","Footer","react_default","Container","index_es","LogoIcon","src","alt","ContactSection","ContactArticle","target","DownloadIcon","footer","gray100","gray900","img","div","TextStyles","body1","SearchInput","_useState","useState","text","setText","_2945722951","AutoCompleteContainer","StyledInput","placeholder","onChange","event","value","AutoCompleteList","filter","frontmatter","includes","_ref2","AutoCompleteItem","gray200","Link","body2","input","Header","translation","menu","openMenu","logo","window","innerWidth","NavConatiner","NavInnerContainer","NoHoverLink","Header_LogoIcon","components_SearchInput","MenuContainer","onClick","Menu","fillColor","gray600","NavLinkList","NavLinkWithLang","ExternalNavLink","nav","navLinkCss","css","gray500","use","detector","initReactI18next","init","detection","order","lookupFromPathIndex","resources","ko","profile","yozzing","john","joy","chichi","lama","esmond","donut","hoi","grep","cheolee","zzung","tony","lion","hun","company","address","tel","searchPlaceholder","recruiting","members","en","fallbackLng","whitelist","initImmediate","Root","Main","main","Layout","components_Header","components_Footer","Img","render","_this$props","this","ratio","etc","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_4___default","ImageContainer","Image","Component","defaultProps","span","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","TAG_TEXT","open source","_","startCase","react_i18next__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_Img__WEBPACK_IMPORTED_MODULE_4__","_LinkWithLang__WEBPACK_IMPORTED_MODULE_5__","PostCard","_props$node","_props$node$frontmatt","date","excerpt","Card","CardThumbnail","CardBody","CardCaption","CardTitle","CardDescription","h2","subtitle1"],"mappings":"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","file":"component---src-templates-tag-tsx-e687348ceb8f3840f636.js","sourcesContent":["import { Body2, Col, Colors, Grid, Headline1, Row } from '@class101/ui';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport LinkWithLang from '../components/LinkWithLang';\nimport PostCard from '../components/PostCard';\nimport SEO from '../components/SEO';\nimport { Edge } from '../graphql-types';\nimport getTagText from '../utils/getTagText';\n\n// Components\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Edge[];\n    };\n  };\n  pageContext: {\n    tag: string;\n    slug: string;\n  };\n}\n\nconst TagTemplate: React.FC<Props> = props => {\n  const { pageContext, data } = props;\n  const { tag, slug } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagText = getTagText(tag);\n  return (\n    <Layout>\n      <SEO title={`${tagText}`} pathname={slug} />\n      <Grid>\n        <Row>\n          <Col>\n            <SiteTitle>{tagText}</SiteTitle>\n            <SiteContent>\n              총 {totalCount}개의 글이 있습니다. <br />\n              <br />\n              <ViewAllTagLink to={`/tags`}>모든 태그 보기</ViewAllTagLink>\n            </SiteContent>\n          </Col>\n        </Row>\n        <Row>\n          {edges.map(({ node }) => (\n            <Col key={node.fields.slug} md={12} lg={6}>\n              <PostCard node={node} />\n            </Col>\n          ))}\n        </Row>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String, $language: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } }, fields: { language: { eq: $language } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 300, truncate: true)\n          fields {\n            slug\n            language\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            thumbnail\n            author\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SiteTitle = styled(Headline1)`\n  font-size: 36px;\n  margin-bottom: 16px;\n`;\n\nconst SiteContent = styled(Body2)`\n  font-size: 17px;\n  margin-bottom: 62px;\n  color: ${Colors.gray700};\n`;\n\nconst ViewAllTagLink = styled(LinkWithLang)`\n  color: ${Colors.gray800};\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport { enqueue as prefetchPathname } from \"./loader\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\ninterface Props {\n  to: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst LinkWithLang: React.FC<Props> = props => {\n  const { i18n } = useTranslation();\n  const { to, children, className } = props;\n  const path = to.startsWith('/') ? `/${i18n.language}${to}` : `/${i18n.language}/${to}`;\n\n  return <Link to={path} className={className}>\n    {children}\n  </Link>\n}\nexport default LinkWithLang;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\n\nimport { SiteMetadata } from '../graphql-types';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  thumbnail?: string;\n  author?: string;\n  pathname?: string;\n}\n\nconst SEO: React.FC<Props> = props => {\n  const queryResult = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n            keywords\n            facebookAppId\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const siteMetadata: SiteMetadata = queryResult.site.siteMetadata;\n  const {\n    t,\n    i18n: { language }\n  } = useTranslation();\n\n  const { title, description, thumbnail, author, pathname } = props;\n\n  const absolutedThumbnail =\n    siteMetadata.siteUrl + (thumbnail || '/images/og-image.png');\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: language\n      }}\n      title={title}\n      titleTemplate={`%s | ${t('title')}`}\n      link={[\n        {\n          rel: 'icon',\n          type: 'image/png',\n          sizes: '16x16',\n          href: '/icons/favicon-16x26.png'\n        },\n        {\n          rel: 'icon',\n          type: 'image/png',\n          sizes: '32x32',\n          href: '/icons/favicon-32x32.png'\n        },\n        {\n          rel: 'icon',\n          type: 'image/png',\n          sizes: '96x96',\n          href: '/icons/favicon-96x96.png'\n        },\n        {\n          rel: 'icon',\n          type: 'image/png',\n          sizes: '192x192',\n          href: '/icons/android-icon-192x192.png'\n        },\n        {\n          rel: 'icon',\n          type: 'image/png',\n          sizes: '192x192',\n          href: '/icons/android-icon-192x192.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '57x57',\n          href: '/icons/apple-icon-57x57.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '60x60',\n          href: '/icons/apple-icon-60x60.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '72x72',\n          href: '/icons/apple-icon-72x72.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '76x76',\n          href: '/icons/apple-icon-76x76.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '114x114',\n          href: '/icons/apple-icon-114x114.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '120x120',\n          href: '/icons/apple-icon-120x120.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '144x144',\n          href: '/icons/apple-icon-144x144.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '152x152',\n          href: '/icons/apple-icon-152x152.png'\n        },\n        {\n          rel: 'apple-touch-icon',\n          type: 'image/png',\n          sizes: '180x180',\n          href: '/icons/apple-icon-180x180.png'\n        },\n        { rel: 'shortcut icon', type: 'ico', href: '/icons/favicon.ico' }\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: description || t('description')\n        },\n        {\n          name: 'author',\n          content: t(`profile.name.${author || siteMetadata.author}`)\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:url`,\n          content: `${siteMetadata.siteUrl}/`\n        },\n        {\n          property: `og:image`,\n          content: absolutedThumbnail\n        },\n        {\n          property: `og:image:width`,\n          content: '1600'\n        },\n        {\n          property: `og:image:height`,\n          content: '900'\n        },\n        {\n          property: `og:description`,\n          content: description || t('description')\n        },\n        {\n          property: `og:type`,\n          content: author === 'Class101' ? 'website' : 'article'\n        },\n        {\n          property: 'og:site_name',\n          content: t('title')\n        },\n\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`\n        },\n        {\n          name: `twitter:creator`,\n          content: t(`profile.name.${author || siteMetadata.author}`)\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: description || t('description')\n        },\n        {\n          name: 'twitter:label1',\n          content: 'Written By'\n        },\n        {\n          name: 'twiiter:data1',\n          content: t(`profile.name.${author || siteMetadata.author}`)\n        },\n        {\n          name: 'keywords',\n          content: siteMetadata.keywords.join(`, `)\n        },\n        {\n          name: 'fb:app_id',\n          content: siteMetadata.facebookAppId\n        },\n        {\n          name: 'msapplication-TileColor',\n          content: '#ffffff'\n        },\n        {\n          name: 'msapplication-TileImage',\n          content: '/icons/ms-icon-144x144.png'\n        },\n        {\n          name: 'theme-color',\n          content: '#ffffff'\n        }\n      ]}\n    />\n  );\n};\n\nexport default SEO;\n","import { Col, Colors, Grid, Row, TextStyles } from '@class101/ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst Footer: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <Grid>\n        <Row>\n          <Col>\n            <LogoIcon src=\"/images/logotype-black.png\" alt=\"class101\" />\n            <ContactSection>\n              <ContactArticle>\n                <b>{t('title')}</b>\n                <p>{t('address')}</p>\n                <p>457-81-00277</p>\n                <p>\n                  <a href=\"mailto:helloworld@class101.net\">helloworld@class101.net</a>\n                </p>\n              </ContactArticle>\n              <ContactArticle>\n                <a href=\"https://play.google.com/store/apps/details?id=net.pedaling.class101\" target=\"_blank\">\n                  <DownloadIcon src=\"/images/download-android.png\" alt=\"android\" />\n                </a>\n                <a\n                  href=\"https://apps.apple.com/kr/app/class101-%ED%81%B4%EB%9E%98%EC%8A%A4101/id1320607634\"\n                  target=\"_blank\"\n                >\n                  <DownloadIcon src=\"/images/download-ios.png\" alt=\"ios\" />\n                </a>\n              </ContactArticle>\n            </ContactSection>\n          </Col>\n        </Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.footer`\n  background-color: ${Colors.gray100};\n  padding-top: 32px;\n  a {\n    color: inherit;\n    font-weight: 600;\n    color: ${Colors.gray900};\n    text-decoration: none;\n    &:hover {\n      color: inherit;\n      text-decoration: underline;\n    }\n  }\n  p {\n    padding: 0;\n    margin: 4px 0;\n  }\n`;\n\nconst LogoIcon = styled.img`\n  width: auto;\n  height: 40px;\n  margin: 0;\n`;\n\nconst DownloadIcon = styled.img`\n  width: 120px;\n  margin-right: 16px;\n`;\n\nconst ContactSection = styled.div`\n  ${TextStyles.body1};\n`;\nconst ContactArticle = styled.div`\n  padding: 16px 0;\n`;\n","import { Colors, TextStyles } from '@class101/ui';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst SearchInput: React.FC = () => {\n  const [text, setText] = useState('');\n\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(PostsQuery);\n\n  const { t } = useTranslation();\n\n  const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <AutoCompleteContainer>\n      <StyledInput placeholder={t('searchPlaceholder')} onChange={onChangeText} />\n      {text && (\n        <AutoCompleteList>\n          {edges\n            .filter(({ node }: any) => node.frontmatter.title.includes(text))\n            .map(({ node }: any) => (\n              <AutoCompleteItem key={node.fields.slug} to={node.fields.slug}>\n                <b>{node.frontmatter.title}</b>\n              </AutoCompleteItem>\n            ))}\n        </AutoCompleteList>\n      )}\n    </AutoCompleteContainer>\n  );\n};\n\nconst PostsQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          fields {\n            slug\n            language\n          }\n          frontmatter {\n            title\n            tags\n            description\n            author\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default SearchInput;\n\nconst AutoCompleteContainer = styled.div`\n  border: 1px solid ${Colors.gray200};\n  box-sizing: border-box;\n  margin: 0 16px;\n  padding: 8px 0;\n  position: relative;\n  background: white;\n  flex: 1 1 auto;\n`;\n\nconst AutoCompleteList = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 1px;\n  top: 100%;\n  z-index: 100;\n`;\n\nconst AutoCompleteItem = styled(Link)`\n  ${TextStyles.body2}\n  border: 1px solid ${Colors.gray200};\n  box-sizing: border-box;\n  display: block;\n  background: white;\n  padding: 16px 12px;\n  color: inherit;\n  text-decoration: none;\n  margin: -1px;\n`;\n\nconst StyledInput = styled.input`\n  ${TextStyles.body2};\n  width: 100%;\n  padding: 0 16px;\n  outline: none;\n  border: none;\n`;\n","import { Col, Colors, Grid, Icon, Row } from '@class101/ui';\nimport { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled, { css } from 'styled-components';\n\nimport LinkWithLang from './LinkWithLang';\nimport SearchInput from './SearchInput';\n\n\nconst Header: React.FC = () => {\n  const translation = useTranslation();\n\n  const [menu, openMenu] = useState(false);\n  const logo =\n    typeof window !== 'undefined' && window.innerWidth > 425\n      ? '/images/logotype-black.png'\n      : '/images/symbol-black.png';\n\n  const toggleMenu = () => openMenu(!menu);\n\n  return (\n    <NavConatiner>\n      <Grid>\n        <Row>\n          <Col>\n            <NavInnerContainer>\n              <NoHoverLink to={`/`}>\n                <LogoIcon src={logo} alt=\"class101\" />\n              </NoHoverLink>\n              <SearchInput />\n              <MenuContainer onClick={toggleMenu}>\n                <Icon.Menu fillColor={Colors.gray600} />\n                {menu && (\n                  <NavLinkList>\n                    <NavLinkWithLang to={`/tags/recruiting`}>{translation.t('recruiting')}</NavLinkWithLang>\n                    <NavLinkWithLang to={`/authors`}>{translation.t('members')}</NavLinkWithLang>\n                    <ExternalNavLink href=\"https://github.com/pedaling\" target=\"_blank\">\n                      Github\n                    </ExternalNavLink>\n                    <ExternalNavLink href={`/en/`}>English</ExternalNavLink>\n                    <ExternalNavLink href={`/ko/`}>한글</ExternalNavLink>\n                  </NavLinkList>\n                )}\n              </MenuContainer>\n            </NavInnerContainer>\n          </Col>\n        </Row>\n      </Grid>\n    </NavConatiner>\n  );\n};\n\nexport default Header;\n\nconst NavConatiner = styled.nav`\n  padding: 16px 0px;\n`;\n\nconst NavInnerContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst LogoIcon = styled.img`\n  display: block;\n  height: 40px;\n  width: auto;\n  margin: 0;\n`;\n\nconst NoHoverLink = styled(LinkWithLang)`\n  box-shadow: none;\n  &:hover {\n    box-shadow: none;\n    text-decoration: none;\n  }\n`;\n\nconst MenuContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nconst NavLinkList = styled.div`\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  right: 0;\n`;\n\nconst navLinkCss = css`\n  display: block;\n  color: ${Colors.gray900};\n  border: ${Colors.gray200} 1px solid;\n  background: white;\n  font-size: 16px;\n  padding: 8px;\n  margin: -1px;\n  width: 100px;\n  text-align: center;\n  text-decoration: none;\n  &:hover {\n    color: ${Colors.gray500};\n    text-decoration: underline;\n  }\n`;\n\nconst NavLinkWithLang = styled(LinkWithLang)`\n  ${navLinkCss};\n`;\n\nconst NavLink = styled(Link)`\n  ${navLinkCss};\n`;\n\nconst ExternalNavLink = styled.a`\n  ${navLinkCss};\n`;\n","import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nexport const initI18n = () => {\n  i18n\n    .use(detector)\n    .use(initReactI18next)\n    .init({\n      detection: {\n        order: ['path'],\n        lookupFromPathIndex: 0\n      },\n      resources: {\n        ko: {\n          translation: {\n            profile: {\n              name: {\n                yozzing: '요찡',\n                john: '존',\n                joy: '조이',\n                chichi: '치치',\n                lama: '라마',\n                esmond: '에즈먼드',\n                donut: '도넛',\n                hoi: '호이',\n                grep: '그랩',\n                cheolee: '처리',\n                zzung: '쩡',\n                tony: '토니',\n                lion: '라이언',\n                hun: '훈'\n              }\n            },\n            title: '클래스101 기술 블로그',\n            description: '신나는 코딩세상',\n            company: '(주)클래스101',\n            address: '서울특별시 중구 한강대로 416 서울스퀘어 13층',\n            tel: '457-81-00277',\n            searchPlaceholder: '제목 및 내용을 입력하세요',\n            recruiting: '채용',\n            members: '구성원'\n          }\n        },\n        en: {\n          translation: {\n            profile: {\n              name: {\n                yozzing: 'Yozzing',\n                john: 'John',\n                joy: 'Joy',\n                chichi: 'Chichi',\n                lama: 'Lama',\n                esmond: 'Esmond',\n                donut: 'Donut',\n                hoi: 'Hoi',\n                grep: 'Grep',\n                cheolee: 'Cheolee',\n                zzung: 'Zzung',\n                tony: 'Tony',\n                lion: 'Lion',\n                hun: 'Hun'\n              }\n            },\n            title: 'Class101 Tech Blog',\n            description: 'Funny Coding World',\n            company: 'Class101',\n            address:\n              '13 floor, seoul-square, (416), han-gang-dae-ro, jun-gu, seoul',\n            tel: '457-81-00277',\n            searchPlaceholder: 'Input title or contents',\n            recruiting: 'Recruiting',\n            members: 'Members'\n          }\n        }\n      },\n      fallbackLng: 'ko',\n      whitelist: ['ko', 'en'],\n      initImmediate: false\n    });\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { initI18n } from '../i18n';\n\nimport Footer from './Footer';\nimport Header from './Header';\n\ninitI18n();\n\n\ninterface Props {\n  children: JSX.Element[];\n}\n\nconst Layout: React.FC<Props> = props => {\n  const { children } = props;\n\n  return (\n    <Root className=\"root\">\n      <Header />\n      <Main>{children}</Main>\n      <Footer />\n    </Root>\n  );\n};\n\nconst Root = styled.div``;\nconst Main = styled.main`\n  padding: 32px 0;\n`;\n\nexport default Layout;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props extends React.ImgHTMLAttributes<any> {\n  ratio: number;\n}\n\nexport default class Img extends React.Component<Props> {\n  public static readonly defaultProps: Partial<Props> = {\n    ratio: 9 / 16,\n  };\n\n  render() {\n    const { ratio, ...etc } = this.props;\n    return (\n      <ImageContainer ratio={ratio}>\n        <Image {...etc} />\n      </ImageContainer>\n    );\n  }\n}\n\ninterface ImageContainerProps {\n  ratio: number;\n}\nconst ImageContainer = styled.span<ImageContainerProps>`\n  display: block;\n  position: relative;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.2);\n  ${({ ratio }) => ratio > 0 && `padding-top: ${ratio * 100}%`};\n`;\nconst Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 3px;\n`;\n","import _ from 'lodash';\n\nconst TAG_TEXT: { [key: string]: string } = {\n  recruiting: '채용 공고',\n  'open source': '오픈소스',\n};\n\nexport default (tag: string) => TAG_TEXT[tag] || _.startCase(tag);\n","import { Body2, Colors, TextStyles } from '@class101/ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport Img from '../components/Img';\nimport { Node } from '../graphql-types';\nimport LinkWithLang from './LinkWithLang';\n\ninterface Props {\n  node: Node;\n}\n\nconst PostCard: React.FC<Props> = props => {\n  const {\n    node: {\n      fields: { slug },\n      frontmatter: { title, description, thumbnail, date, author },\n      excerpt,\n    },\n  } = props;\n\n  const { t } = useTranslation();\n\n  return (\n    <Card to={`/${slug}`}>\n      <CardThumbnail src={thumbnail} />\n      <CardBody>\n        <CardCaption>{date}</CardCaption>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description || excerpt}</CardDescription>\n        <CardCaption>\n          Written By <b>{t(`profile.name.${author}`)}</b>\n        </CardCaption>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default PostCard;\n\nconst Card = styled(LinkWithLang)`\n  display: block;\n  border-radius: 3px;\n  box-sizing: border-box;\n  background: white;\n  text-decoration: none;\n  margin-bottom: 16px;\n  &:hover {\n    color: inherit;\n    img {\n      transition: transform 0.3s ease-in;\n      transform: scale(1.025);\n    }\n  }\n`;\n\nconst CardBody = styled.div`\n  padding: 8px 0;\n`;\n\nconst CardThumbnail = styled(Img)`\n  object-fit: cover;\n`;\n\nconst CardTitle = styled.h2`\n  ${TextStyles.subtitle1};\n  margin-bottom: 4px;\n`;\n\nconst CardCaption = styled(Body2)`\n  color: ${Colors.gray700};\n  margin-bottom: 4px;\n`;\n\nconst CardDescription = styled.div`\n  ${TextStyles.body2}\n  color: ${Colors.gray900};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  letter-spacing: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 3; /* 라인수 */\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n  line-height: 1.5em;\n  height: 4.5em;\n  margin-bottom: 4px;\n`;\n"],"sourceRoot":""}