{"componentChunkName":"component---src-templates-posts-tsx","path":"/ko/blog/2/","webpackCompilationHash":"09d7e63a8118b38f087c","result":{"data":{"site":{"siteMetadata":{"title":"클래스101 기술 블로그","description":"신나는 코딩 세상"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"편집자 주 ‘Python’은 독자의 가독성을 높이기 위해 글의 제목과 코드를 제외한 본문 전체에서 ‘파이썬’으로 한글 표기함. 이는 외래어 표기법 상 관용에 해당함. Overview 개발자가 3년 정도의 경력을 쌓으면 새로운 개발을 꿈꿉니다. 저도 마찬가지였습니다. 활기찬 스타트업에서 웹 백엔드를 맡아 개발하고 싶은 마음이 생겨났죠. 클래스101으로 이직한 이유이기도 합니다. 그렇다면 파이썬(Python)과 JS(JavaScript), TS(TypeScript)가 언어적으로 무엇이 다를까요. 크게 네 가지로 알아보겠습니다. 혹시 저처럼 서버 개발자에서 웹 백엔드 개발자로 새로운 일에 도전해보고 싶다면 이번 글이 분명 도움이 될 겁니다. Dictionary 사용법 Dictionary는 데이터의 가공과 저장이 편리합니다. 개발자들이 자주 쓰는 타입이기도 하죠. 보통 맵의 key를 순회시키면 아래와 같이 씁니다. 하지만 JS에서는 아래와 같이 씁니다. 해당 객체의 method가 아닌 를…","fields":{"slug":"blog/2019/07/16/lama","language":"ko"},"frontmatter":{"date":"2019-07-16","title":"Python 서버 개발자 관점에서 본 TypeScript, JavaScript","description":"","thumbnail":"/images/thumbnails/typescript.png","author":"lama","tags":["typescript","javascript"]}}},{"node":{"excerpt":"Jump to Monorepo 편집자 주\n‘Monorepo’는 독자의 가독성을 높이기 위해 글의 제목을 제외한 본문 전체에서 ‘모노레포’로 한글 표기함. 이는 외래어 표기법 상 관용에 해당함. Overview 이번 글에서는 모노레포를 도입한 계기와 장・단점, Git history를 보존한 채 레포지토리를 합치는 방법을 다루겠습니다. 모노레포의 이해 모노레포는 두 개 이상의 프로젝트 코드를 하나의 레포지토리에서 관리하는 기법입니다.1 페이스북이나 구글, 마이크로소프트 등 대형 소프트웨어 기업에서도 사용되고 있고, 일부 인기 있는 오픈 소스 프로젝트들도 그들의 레포지토리를 관리하기 위해 Monorepo를 쓰고 있습니다. 그렇다면 클래스101에서는 왜 모노레포가 필요할까요? 우선 그 특징부터 살펴보겠습니다. 모노레포의 특징 코드의 재사용 여러 레포지토리에서 프로젝트를 진행하면 비슷한 로직을 각 레포지토리에서 중복 구현하는 때가 많습니다. 공통 로직을 다시 작성하지 않고 공유하려면 레포지…","fields":{"slug":"blog/2019/07/12/tony","language":"ko"},"frontmatter":{"date":"2019-07-12","title":"Monorepo with typescript (1)","description":"","thumbnail":"/images/thumbnails/monorepo.png","author":"tony","tags":["typescript","monorepo","lerna","git"]}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":6,"skip":6,"language":"ko","numPages":2,"currentPage":2}}}